name: Build and Release Android App

on:
  push:
    branches:
      - 'dev'
      - 'main'

  workflow_dispatch:
    inputs:
      release:
        type: choice
        description: 'Release'
        required: true
        default: 'qa'
        options:
          - dev
          - qa
          - prod
      ECG:
        type: boolean
        description: 'Enable ECG'
        required: false
        default: false

permissions:
  contents: read
  pull-requests: write
  id-token: write
  issues: write

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    
    steps:
      - name: Set Matrix
        id: set-matrix
        run: |
          {
            echo "matrix<<EOF"
            if [[ ${GITHUB_REF} == 'refs/heads/dev' && ${{ github.event_name }} != 'workflow_dispatch' ]]; then
              echo '{"include":[{"env":"dev"}]}'
            elif [[ ${GITHUB_REF} == 'refs/heads/main' && ${{ github.event_name }} != 'workflow_dispatch' ]]; then
              echo '{"include":[{"env":"prod"}]}'
            elif [[ ${{ github.event_name }} == 'workflow_dispatch' ]]; then
              echo '{"include":[{"env":"${{ github.event.inputs.environment }}"}]}'
            else
              echo '{"include":[{"env":"dev"}]}'
            fi
            echo "EOF"
          } >> $GITHUB_OUTPUT
      - name: Print Matrix
        run: |
         echo ${{steps.set-matrix.outputs.matrix}}
    

  # approval:
  #   needs: [prepare]
  #   runs-on: ubuntu-latest
  #   environment: 'prod'
  #   env:
  #     APP_ENV: 'prod'
  #     APPROVERS: ${{ vars.APPROVERS }}
  #   steps:
  #     - name: debug env from vars
  #       run: |
  #         echo "APPROVERS=${{ vars.APPROVERS }}"
  #     - name: debug env
  #       run: |
  #         echo "APPROVERS=${{ env.APPROVERS }}"
  #     - name: approve-prod-deployment
  #       if: ${{ env.APP_ENV == 'prod' }}
  #       uses: trstringer/manual-approval@v1
  #       timeout-minutes: 30
  #       with:
  #         secret: ${{ github.TOKEN }}
  #         approvers: ${{ vars.APPROVERS }}
  #         minimum-approvals: 1
  #         issue-title: "Deploying ETL Glue job scripts to ${{ env.APP_ENV }}"

  #     - name: Approval Received
  #       if: ${{ env.APP_ENV == 'prod' }}
  #       run: echo "Approval for deploying ETL Glue job scripts to ${{ env.APP_ENV }} was received"

  #     # - name: Auto approve for non-prod environments
  #     #   if: ${{ env.APP_ENV != 'prod' }}
  #     #   run: echo "Auto approved for ${{ env.APP_ENV }} environment"

  build:
    needs: [prepare]
    if: ${{ needs.prepare.outputs.matrix != '' }}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
      fail-fast: false
    
    steps:
      - name: Print data from prepare for debug
        run: |
          echo ${{ matrix.release }}

      - name: Decide APK name
        if: "${{ matrix.env == 'dev' || matrix.env == 'stage'}}"
        id: apk
        run: |
          ECG_INPUT="${{ github.event.inputs.ECG || 'false' }}"
          if [ "${{ matrix.env }}" = "dev" ] && [ "$ECG_INPUT" = "false" ]; then
            apk_path="app/build/outputs/apk/debug/app-debug.apk"
          elif [ "${{ matrix.env }}" = "dev" ] && [ "$ECG_INPUT" = "true" ]; then
            apk_path="app/build/outputs/apk/debugECG/app-debugECG.apk"
          elif [ "${{ matrix.env }}" = "stage" ] && [ "$ECG_INPUT" = "false" ]; then
            apk_path="app/build/outputs/apk/stage/app-stage.apk"
          elif [ "${{ matrix.env }}" = "stage" ] && [ "$ECG_INPUT" = "true" ]; then
            apk_path="app/build/outputs/apk/stageECG/app-stageECG.apk"
          else
            echo "Unknown environment: ${{ matrix.env }}"
            exit 1
          fi
          echo $apk_path
          echo "apk_path=$apk_path" >> $GITHUB_OUTPUT
          
      - name: Generate release notes
        run: |
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          echo "- ${{ github.event.head_commit.message }} (${{ github.actor }}, ${SHORT_SHA})"
          # echo "- ${GITHUB_EVENT_HEAD_COMMIT_MESSAGE} (${GITHUB_ACTOR}, $SHORT_SHA)" > release-notes.txt

      - name: print ECG
        run: | 
          echo ${{ github.event.inputs.ECG }}
      - name: ecg condition
        if: ${{ github.event.inputs.ECG == 'true' }}
        run: echo "ECG - Enabled"

      
      
