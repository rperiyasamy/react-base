name: Set Deployment Matrix

on:
  # push:
  #   branches:
  #     - 'dev'
  #     - 'main'

  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        default: 'ndev'
        type: choice
        options:
          - ndev
          - nqa
          - stg
          - prod
          - dr
          - preprod
      folder:
        description: 'Select a folder to deploy'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - drivers
          - python-libraries
          - scripts
          - sql-queries

permissions:
  contents: read
  id-token: write
  issues: write
jobs:
  # prepare:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     matrix: ${{ steps.set-matrix.outputs.matrix }}

  #   steps:
  #     - name: Set Matrix
  #       id: set-matrix
  #       run: |
  #         {
  #         # Initialize matrix
  #         if [[ ${GITHUB_REF} == 'refs/heads/dev' && ${{ github.event_name }} != 'workflow_dispatch' ]]; then
  #           # Deploy from dev branch to dev
  #           echo "matrix<<EOF"
  #           echo "{\"include\":[{\"env\":\"ndev\"}]}"
  #         elif [[ ${GITHUB_REF} == 'refs/heads/main' && ${{ github.event_name }} != 'workflow_dispatch' ]]; then
  #           # Deploy from main branch to prod
  #           echo "matrix<<EOF"
  #           echo "{\"include\":[{\"env\":\"prod\"}]}"
  #         elif [[ ${{ github.event_name }} == 'workflow_dispatch' ]]; then
  #           # Workflow dispatch logic
  #           echo "matrix<<EOF"
  #           echo "{\"include\":["
  #               echo "{\"env\":\"${{ github.event.inputs.environment }}\",}"
  #           echo "]}"
  #         else
  #           # Default case: no matrix
  #           echo "matrix<<EOF"
  #           echo ""
  #         fi
  #         echo EOF
  #         } >> $GITHUB_OUTPUT
          
  #     - name: Echo Matrix
  #       run: |
  #         echo "${{ steps.set-matrix.outputs.matrix }}"

  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Set Deployment Matrix
        id: set-matrix
        uses: ./.github/set-deployment-matrix
        with:
          environment: ${{ github.event.inputs.environment }}

  set-env:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set.outputs.environment }}
    steps:
      - name: print git run number
        run: echo ${{ github.run_number }}
      - name: Determine Environment
        id: set
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "environment=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
          else
            BRANCH="${GITHUB_REF#refs/heads/}"
            if [[ "$BRANCH" == "dev" ]]; then
              echo "environment=ndev" >> $GITHUB_OUTPUT
            elif [[ "$BRANCH" == "main" ]]; then
              echo "environment=prod" >> $GITHUB_OUTPUT
            else
              echo "Unknown branch: $BRANCH"
              exit 1
            fi
          fi
      - name: print matrix
        run: echo ${{ steps.set.outputs.environment }}
      - name: print
        run: |
          echo "GITHUB_REF: $GITHUB_REF"
          echo "gthubref: ${{ github.ref }}"
          
  # approval:
  #   needs: [set-env]
  #   if: |
  #     always() 
  #   runs-on: ubuntu-latest
  #   environment: ${{ needs.set-env.outputs.environment }}
  #   env:
  #     APP_ENV: ${{ needs.set-env.outputs.environment }}
  #   steps:
  #     - name: approve-prod-deployment
  #       if: ${{ env.APP_ENV == 'prod' }}
  #       uses: trstringer/manual-approval@v1
  #       timeout-minutes: 30
  #       with:
  #         secret: ${{ github.TOKEN }}
  #         approvers: rperiyasamy
  #         minimum-approvals: 1
  #         issue-title: "Deploying ETL Glue job scripts to ${{ env.APP_ENV }}"

  #     - name: Approval Received
  #       if: ${{ env.APP_ENV == 'prod' }}
  #       run: echo "Approval for deploying ETL Glue job scripts to ${{ env.APP_ENV }} was received"

  #     - name: Auto approve for non-prod environments
  #       if: ${{ env.APP_ENV != 'prod' }}
  #       run: echo "Auto approved for ${{ env.APP_ENV }} environment"
  # approval:
  #   needs: [prepare]
  #   if: |
  #     always() 
  #   strategy:
  #     matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
  #     fail-fast: false
  #   runs-on: ubuntu-latest
  #   environment: ${{ matrix.env }}
  #   env:
  #     APP_ENV: ${{ matrix.env }}
  #   steps:
  #     - name: approve-prod-deployment
  #       if: ${{ matrix.env == 'prod' }}
  #       uses: trstringer/manual-approval@v1
  #       timeout-minutes: 30
  #       with:
  #         secret: ${{ github.TOKEN }}
  #         approvers: rperiyasamy
  #         minimum-approvals: 1
  #         issue-title: "Deploying MYAPP to ${{ matrix.env }}"

  #     - name: Approval Received
  #       if: ${{ matrix.env == 'prod' }}
  #       run: echo "Approval for deploying MYAPP to ${{ matrix.env }} was received"

  #     - name: Auto approve for non-prod environments
  #       if: ${{ matrix.env != 'prod' }}
  #       run: echo "Auto approved for ${{ matrix.env }} environment"
        
  build:
    needs: [set-env, set-matrix]
    if: ${{ needs.set-env.outputs.environment }}
    strategy:
      # matrix: ${{ fromJSON(needs.set-env.outputs.environment) }}
      matrix: ${{ fromJson(needs.set-matrix.outputs.matrix) }}
      fail-fast: false
    env:
      FOLDER: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.folder || 'all' }}
    runs-on: ubuntu-latest

    steps:
      # - name: print matrix
      #   run: |
      #     echo "ENV => ${{matrix.env}}"
      #     echo ${{matrix}}
      #     echo "FOLDER=> $FOLDER"

      - name: Deploy
        run: |
          echo "Environment: ${{ matrix.env }}"
          echo "Image: ${{ matrix.image }}"
          echo "Build flag: ${{ matrix.build }}"
      
